{"version":3,"file":"index.preact.js","sources":["../node_modules/@bem/sdk.naming.presets/origin.js","../node_modules/@bem/sdk.naming.presets/react.js","../node_modules/@bem/sdk.naming.presets/two-dashes.js","../node_modules/@bem/sdk.naming.presets/index.js","../node_modules/inherit/lib/inherit.js","../node_modules/inherit/index.js","../src/Component.js","../node_modules/@bem/sdk.naming.entity.stringify/index.js","../src/Entity.js","../src/Bem.js","../src/Core.js","../src/presets/Preact.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n    delims: {\n        elem: '__',\n        mod: { name: '_', val: '_' }\n    },\n    fs: {\n        // delims: { elem: '__', mod: '_' }, // redundand because of defaults\n        pattern: '${layer}.blocks/${entity}.${tech}',\n        scheme: 'nested'\n    },\n    wordPattern: '[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*'\n};\n","'use strict';\n\nmodule.exports = {\n    delims: {\n        elem: '-',\n        mod: { name: '_', val: '_' }\n    },\n    fs: {\n        delims: { elem: '' },\n        pattern: '${layer?${layer}.}blocks/${entity}.${tech}',\n        scheme: 'nested'\n    },\n    wordPattern: '[a-zA-Z0-9]+'\n};\n","'use strict';\n\nmodule.exports = {\n    delims: {\n        elem: '__',\n        mod: { name: '--', val: '_' }\n    },\n    fs: {\n        // delims: { elem: '__', mod: '--' }, // redundand because of defaults\n        pattern: '${layer}.blocks/${entity}.${tech}',\n        scheme: 'nested'\n    },\n    wordPattern: '[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*'\n};\n","'use strict';\n\nmodule.exports = {\n    origin: require('./origin'),\n    react: require('./react'),\n    'two-dashes': require('./two-dashes')\n};\n","/**\n * @module inherit\n * @version 2.2.6\n * @author Filatov Dmitry <dfilatov@yandex-team.ru>\n * @description This module provides some syntax sugar for \"class\" declarations, constructors, mixins, \"super\" calls and static members.\n */\n\n(function(global) {\n\nvar hasIntrospection = (function(){return '_';}).toString().indexOf('_') > -1,\n    emptyBase = function() {},\n    hasOwnProperty = Object.prototype.hasOwnProperty,\n    objCreate = Object.create || function(ptp) {\n        var inheritance = function() {};\n        inheritance.prototype = ptp;\n        return new inheritance();\n    },\n    objKeys = Object.keys || function(obj) {\n        var res = [];\n        for(var i in obj) {\n            hasOwnProperty.call(obj, i) && res.push(i);\n        }\n        return res;\n    },\n    extend = function(o1, o2) {\n        for(var i in o2) {\n            hasOwnProperty.call(o2, i) && (o1[i] = o2[i]);\n        }\n\n        return o1;\n    },\n    toStr = Object.prototype.toString,\n    isArray = Array.isArray || function(obj) {\n        return toStr.call(obj) === '[object Array]';\n    },\n    isFunction = function(obj) {\n        return toStr.call(obj) === '[object Function]';\n    },\n    noOp = function() {},\n    needCheckProps = true,\n    testPropObj = { toString : '' };\n\nfor(var i in testPropObj) { // fucking ie hasn't toString, valueOf in for\n    testPropObj.hasOwnProperty(i) && (needCheckProps = false);\n}\n\nvar specProps = needCheckProps? ['toString', 'valueOf'] : null;\n\nfunction getPropList(obj) {\n    var res = objKeys(obj);\n    if(needCheckProps) {\n        var specProp, i = 0;\n        while(specProp = specProps[i++]) {\n            obj.hasOwnProperty(specProp) && res.push(specProp);\n        }\n    }\n\n    return res;\n}\n\nfunction override(base, res, add) {\n    var addList = getPropList(add),\n        j = 0, len = addList.length,\n        name, prop;\n    while(j < len) {\n        if((name = addList[j++]) === '__self') {\n            continue;\n        }\n        prop = add[name];\n        if(isFunction(prop) &&\n                (!prop.prototype || !prop.prototype.__self) && // check to prevent wrapping of \"class\" functions\n                (!hasIntrospection || prop.toString().indexOf('.__base') > -1)) {\n            res[name] = (function(name, prop) {\n                var baseMethod = base[name]?\n                        base[name] :\n                        name === '__constructor'? // case of inheritance from plain function\n                            res.__self.__parent :\n                            noOp,\n                    result = function() {\n                        var baseSaved = this.__base;\n\n                        this.__base = result.__base;\n                        var res = prop.apply(this, arguments);\n                        this.__base = baseSaved;\n\n                        return res;\n                    };\n                result.__base = baseMethod;\n\n                return result;\n            })(name, prop);\n        } else {\n            res[name] = prop;\n        }\n    }\n}\n\nfunction applyMixins(mixins, res) {\n    var i = 1, mixin;\n    while(mixin = mixins[i++]) {\n        res?\n            isFunction(mixin)?\n                inherit.self(res, mixin.prototype, mixin) :\n                inherit.self(res, mixin) :\n            res = isFunction(mixin)?\n                inherit(mixins[0], mixin.prototype, mixin) :\n                inherit(mixins[0], mixin);\n    }\n    return res || mixins[0];\n}\n\n/**\n* Creates class\n* @exports\n* @param {Function|Array} [baseClass|baseClassAndMixins] class (or class and mixins) to inherit from\n* @param {Object} prototypeFields\n* @param {Object} [staticFields]\n* @returns {Function} class\n*/\nfunction inherit() {\n    var args = arguments,\n        withMixins = isArray(args[0]),\n        hasBase = withMixins || isFunction(args[0]),\n        base = hasBase? withMixins? applyMixins(args[0]) : args[0] : emptyBase,\n        props = args[hasBase? 1 : 0] || {},\n        staticProps = args[hasBase? 2 : 1],\n        res = props.__constructor || (hasBase && base.prototype && base.prototype.__constructor)?\n            function() {\n                return this.__constructor.apply(this, arguments);\n            } :\n            hasBase?\n                function() {\n                    return base.apply(this, arguments);\n                } :\n                function() {};\n\n    if(!hasBase) {\n        res.prototype = props;\n        res.prototype.__self = res.prototype.constructor = res;\n        return extend(res, staticProps);\n    }\n\n    extend(res, base);\n\n    res.__parent = base;\n\n    var basePtp = base.prototype,\n        resPtp = res.prototype = objCreate(basePtp);\n\n    resPtp.__self = resPtp.constructor = res;\n\n    props && override(basePtp, resPtp, props);\n    staticProps && override(base, res, staticProps);\n\n    return res;\n}\n\ninherit.self = function() {\n    var args = arguments,\n        withMixins = isArray(args[0]),\n        base = withMixins? applyMixins(args[0], args[0][0]) : args[0],\n        props = args[1],\n        staticProps = args[2],\n        basePtp = base.prototype;\n\n    props && override(basePtp, basePtp, props);\n    staticProps && override(base, base, staticProps);\n\n    return base;\n};\n\nvar defineAsGlobal = true;\nif(typeof exports === 'object') {\n    module.exports = inherit;\n    defineAsGlobal = false;\n}\n\nif(typeof modules === 'object' && typeof modules.define === 'function') {\n    modules.define('inherit', function(provide) {\n        provide(inherit);\n    });\n    defineAsGlobal = false;\n}\n\nif(typeof define === 'function') {\n    define(function(require, exports, module) {\n        module.exports = inherit;\n    });\n    defineAsGlobal = false;\n}\n\ndefineAsGlobal && (global.inherit = inherit);\n\n})(this);\n","/*!\n * node-inherit\n * Copyright(c) 2011 Dmitry Filatov <dfilatov@yandex-team.ru>\n * MIT Licensed\n */\n\nmodule.exports = require('./lib/inherit');\n","import inherit from 'inherit';\n\nlet uniqCount = 0;\nconst noop = () => {},\n    prop = name => props => props[name];\n\nexport default function(Bem) {\n    return inherit(Bem, {\n        __constructor() {\n            this.__base(...arguments);\n            this.willInit(this.props);\n        },\n\n        addBemClassName : () => true,\n        willInit : noop,\n        tag : noop,\n        attrs : noop,\n        style : noop,\n        mods : noop,\n        addMix : noop,\n        cls : prop('cls'),\n        mix : prop('mix'),\n        content : prop('children'),\n        wrap : (props, state, component) => component,\n\n        render() {\n            const { props, state } = this,\n                attrs = this.attrs(props, state) || {},\n                style = this.style(props, state) || {},\n                component = this.__render({\n                    addBemClassName : this.addBemClassName(props, state),\n                    tag : this.tag(props, state),\n                    attrs : { ...attrs, style : { ...attrs.style, ...style } },\n                    block : this.block,\n                    elem : this.elem,\n                    mods : this.mods(props, state),\n                    mix : [].concat(this.mix(props, state), this.addMix(props, state)),\n                    cls : this.cls(props, state),\n                    children : this.content(props, state)\n                }),\n                optionalyReplaced = this.replace? this.replace(props, state) : component,\n                optionalyWrapped = this.wrap(props, state, optionalyReplaced);\n\n            return optionalyWrapped;\n        },\n\n        generateId(key = 'uniq') {\n            this.__uniqId = this.__uniqId || {};\n            return this.__uniqId[key]\n                ? this.__uniqId[key]\n                : (this.__uniqId[key] = `${key}${++uniqCount}`);\n        }\n    });\n}\n","'use strict';\n\n/**\n * Forms a string according to object representation of BEM entity.\n *\n * @param {Object|BemEntityName} entity - object representation of BEM entity.\n * @param {BemNamingConventionDelims} delims - separates entity names from each other.\n * @returns {String}\n */\nfunction stringify(entity, delims) {\n    if (!entity || !entity.block) {\n        return '';\n    }\n\n    const res = [entity.block];\n\n    if (entity.elem !== undefined) {\n        res.push(delims.elem, entity.elem);\n    }\n\n    const mod = entity.mod;\n    if (mod !== undefined) {\n        const val = mod.val;\n        if (typeof mod === 'string') {\n            res.push(delims.mod.name, mod);\n        } else if (val || !('val' in mod)) {\n            res.push(delims.mod.name, mod.name);\n\n            if (val && val !== true) {\n                res.push(delims.mod.val, val);\n            }\n        }\n    }\n\n    return res.join('');\n}\n\n/**\n * Creates `stringify` function for specified naming convention.\n *\n * @param {BemNamingConvention} convention - options for naming convention.\n * @returns {Function}\n */\nmodule.exports = convention => {\n    console.assert(convention.delims && convention.delims.elem && convention.delims.mod,\n        '@bem/sdk.naming.entity.stringify: convention should be an instance of BemNamingEntityConvention');\n    return (entity) => stringify(entity, convention.delims);\n};\n","const delim = '$';\n\nexport function tokenize({ block, elem }) {\n    return `${block}${delim}${elem}`;\n};\n\nexport function parse(id) {\n    const entity = id.split(delim);\n    return {\n        block : entity[0],\n        elem : entity[1] === 'undefined' ? undefined : entity[1]\n    };\n};\n","import inherit from 'inherit';\nimport stringifyClassName from '@bem/sdk.naming.entity.stringify';\nimport * as Entity from './Entity';\n\nconst bemModes = {\n    block : 1,\n    elem : 1,\n    addBemClassName : 1,\n    tag : 1,\n    attrs : 1,\n    mods : 1,\n    mix : 1,\n    cls : 1\n};\n\nexport default function({ preset, naming }) {\n    const { Base, classAttribute, Render, PropTypes } = preset,\n        getRenderProps = function(instance, props) {\n            const mergedProps = {\n                ...props.attrs,\n                ...props,\n                [classAttribute] : instance.__cnb(props)\n            };\n\n            return Object.keys(mergedProps).reduce((props, p) => {\n                if(!bemModes[p]) props[p] = mergedProps[p];\n                return props;\n            }, Object.create(null));\n        },\n        resolveMods = entity => entity.elem ? entity.elemMods || entity.mods : entity.mods,\n        runtimeNaming = instance => {\n            const entityClassName = stringifyClassName(instance.__self.__dangerouslySetNaming || naming);\n\n            return ({ addBemClassName = true, block, mods, elem, elemMods, mix, cls }) => {\n                if(addBemClassName) {\n                    const resolvedMods = resolveMods({ block, mods, elem, elemMods }),\n                        entities = (instance.__self.bases || []).map(key => ({ block : key }))\n                            .concat({ block, elem });\n\n                    if(resolvedMods) {\n                        const realModsEntities = resolvedMods.__entities || {};\n                        for(let modName in resolvedMods) {\n                            if(modName === '__entities') continue;\n\n                            if(realModsEntities[modName]) {\n                                for(let entity in realModsEntities[modName])\n                                    if(resolvedMods[modName]) {\n                                        entity = Entity.parse(entity);\n                                        entities.push({\n                                            block : entity.block,\n                                            elem : entity.elem,\n                                            mod : { name : modName, val : resolvedMods[modName] }\n                                        });\n                                    }\n                            } else entities.push({\n                                block,\n                                elem,\n                                mod : { name : modName, val : resolvedMods[modName] }\n                            });\n                        }\n                    }\n\n                    if(mix) {\n                        const mixedEntities = {},\n                            resolveMixed = mixed => {\n                                mixed.mods = resolveMods(mixed);\n\n                                const k = Entity.tokenize(mixed);\n\n                                if(mixedEntities[k])\n                                    mixedEntities[k].mods = Object.assign(\n                                        resolveMods({ ...mixed, ...mixedEntities[k] }), mixed.mods\n                                    );\n                                else mixedEntities[k] = mixed;\n                            },\n                            resolveMixes = mixes => {\n                                for(let entity of [].concat(mixes))\n                                    if(entity) {\n                                        if(typeof entity.type === 'function') {\n                                            const props = entity.props,\n                                                inst = new entity.type(props);\n\n                                            entity = {\n                                                block : inst.block,\n                                                elem : inst.elem,\n                                                mods : inst.mods(props),\n                                                mix : [inst.mix(props), inst.addMix(props)]\n                                            };\n                                        }\n\n                                        resolveMixed(entity);\n                                        entity.mix && resolveMixes(entity.mix);\n                                    }\n                            };\n\n                        resolveMixes(mix);\n\n                        Object.keys(mixedEntities).forEach(k => {\n                            const mixed = mixedEntities[k],\n                                mixedMods = mixed.mods,\n                                mixedBlock = mixed.block || block,\n                                mixedElem = mixed.elem;\n\n                            entities.push({ block : mixedBlock, elem : mixedElem });\n\n                            mixedMods && Object.keys(mixedMods).forEach(name => {\n                                const val = mixedMods[name];\n                                val && entities.push({ block : mixedBlock, elem : mixedElem, mod : { name, val } });\n                            });\n                        });\n                    }\n\n                    cls && entities.push(cls);\n\n                    return entities.map(entity => typeof entity === 'string'?\n                        entity : entityClassName(entity)).join(' ');\n                }\n            };\n        };\n\n    return inherit(Base, {\n        __constructor() {\n            this.__base(...arguments);\n            this.__cnb || (this.__cnb = runtimeNaming(this));\n        },\n\n        getChildContext() {\n            const block = this.block || this.props.block,\n                elem = this.elem || this.props.elem,\n                contextBlock = this.context && this.context.bemBlock;\n\n            return block && (!elem && contextBlock !== block) || typeof contextBlock === 'undefined'?\n                { bemBlock : block } :\n                {};\n        },\n\n        render() {\n            let props = Object.assign({}, this.props);\n            const { bemBlock } = this.context;\n\n            if(!props.elem && !props.block && bemBlock)\n                throw Error('Prop elem must be specified');\n\n            const typeOfBlock = typeof props.block;\n            if(typeOfBlock === 'undefined')\n                props.block = bemBlock;\n            /* istanbul ignore next */\n            else if(typeOfBlock === 'object')\n                props.block = block.block;\n            /* istanbul ignore next */\n            else if(typeOfBlock === 'function')\n                props.block = block.prototype.block;\n\n            if(!props.block)\n                throw Error('Can\\'t get block from context');\n\n            return this.__render(props);\n        },\n\n        __render(props) {\n            return Render(props.tag || 'div', getRenderProps(this, props));\n        }\n    }, {\n        displayName : 'Bem',\n\n        childContextTypes : {\n            bemBlock : PropTypes.string\n        },\n\n        contextTypes : {\n            bemBlock : PropTypes.string\n        },\n\n        __displayName({ block, elem }) {\n            this.__cnb || (this.__cnb = stringifyClassName(this.__dangerouslySetNaming || naming));\n            return this.__cnb({ block, elem });\n        }\n    });\n}\n","import inherit from 'inherit';\nimport Component from './Component';\nimport Bem from './Bem';\nimport { tokenize } from './Entity';\n\nexport default function Core(options) {\n    const UserBem = Bem(options),\n        Base = Component(UserBem),\n        validateDecl = decl => {\n            if(!decl.block)\n                throw new Error('Declaration must specify block field');\n        },\n        bemName = Base.__displayName.bind(Base),\n        entities = {},\n        castModVal = modVal => typeof modVal === 'number'? modVal.toString() : modVal,\n        lifecycleHooks = {\n            didCatch : 'componentDidCatch',\n            willMount : 'componentWillMount',\n            didMount : 'componentDidMount',\n            willReceiveProps : 'componentWillReceiveProps',\n            shouldUpdate : 'shouldComponentUpdate',\n            willUpdate : 'componentWillUpdate',\n            didUpdate : 'componentDidUpdate',\n            willUnmount : 'componentWillUnmount'\n        },\n        wrapWithFunction = (obj, name) => {\n            if(Array.isArray(name))\n                name.forEach(n => wrapWithFunction(obj, n));\n            else if(obj.hasOwnProperty(name)) {\n                const val = obj[name];\n                typeof val !== 'function' && (obj[name] = () => val);\n            }\n\n            return obj;\n        },\n        makePredicates = obj =>\n            wrapWithFunction(obj,\n                ['addBemClassName', 'tag', 'attrs', 'style', 'content', 'cls', 'mods', 'mix', 'addMix', 'wrap']),\n        collectMods = (fields) => {\n            if(fields.hasOwnProperty('mods')) {\n                const val = fields['mods'];\n                fields['mods'] = function() {\n                    // FIXME: @dfilatov\n                    const collected = [val, this.__base][0].apply(this, arguments) || {},\n                        entities = collected.__entities || (collected.__entities = {});\n\n                    for(let modName in collected) {\n                        if(modName === '__entities') continue;\n\n                        (entities[modName] || (entities[modName] = {}))[tokenize(fields)] = true;\n                    }\n\n                    return collected;\n                };\n            }\n\n            return fields;\n        },\n        buildModPredicateFunction = predicate => {\n            if(typeof predicate === 'function') return predicate;\n\n            const modNames = Object.keys(predicate);\n\n            if(modNames.length === 1) { // simplest, but most common case\n                const [modName] = modNames;\n                let modVal = predicate[modName];\n\n                return typeof modVal === 'function'?\n                    modVal :\n                    (modVal = castModVal(modVal)) === '*'?\n                        props => !!castModVal(props[modName]) :\n                        props => props[modName] === modVal;\n            }\n\n            return function(props) {\n                return modNames.every(modName => {\n                    const modPredicate = predicate[modName];\n                    return typeof modPredicate === 'function'?\n                        modPredicate.call(this, props) :\n                        modPredicate === '*'?\n                            !!castModVal(props[modName]) :\n                            castModVal(modPredicate) === castModVal(props[modName]);\n                });\n            };\n        },\n        buildAutoModsFunction = predicate => {\n            if(typeof predicate === 'function') return undefined;\n\n            const modNames = Object.keys(predicate);\n\n            if(modNames.length === 1) { // simplest, but most common case\n                const [modName] = modNames;\n                return function(props) {\n                    return {\n                        ...this.__base(...arguments),\n                        [modName] : props[modName]\n                    };\n                };\n            }\n\n            return function(props) {\n                return {\n                    ...this.__base(...arguments),\n                    ...modNames.reduce((res, modName) => {\n                        res[modName] = props[modName];\n                        return res;\n                    }, {})\n                };\n            };\n        },\n        wrapFieldForMod = (field, predicateFn, baseMethod) =>\n            function() {\n                let method;\n                if(predicateFn.call(this, this.props, this.state))\n                    method = field;\n                else\n                    baseMethod && baseMethod !== field &&\n                        (method = this.__base);\n\n                return method && method.apply(this, arguments);\n            },\n        extendFields = (from, to) => {\n            if(from)\n                for(let field in to)\n                    from[field] && Object.assign(to[field], from[field]);\n        },\n        fixHooks = obj => {\n            for(let oldName in lifecycleHooks)\n                if(obj[oldName]) {\n                    obj[lifecycleHooks[oldName]] = obj[oldName];\n                    delete obj[oldName];\n                }\n\n            return obj;\n        },\n        buildExtendableFields = (origin = {}) =>\n            ['propTypes', 'defaultProps', 'contextTypes', 'childContextTypes'].reduce((obj, field) => {\n                obj[field] = { ...origin[field] };\n                return obj;\n            }, {}),\n        applyEntityDecls = function() {\n            const entity = this;\n            let entityCls = entity.cls;\n\n            function applyEntityDecl(cls, decl) {\n                let { staticFields } = decl;\n                const { fields } = decl,\n                    extendableFields = buildExtendableFields(cls);\n\n                [].concat(cls, staticFields).forEach(c => extendFields(c, extendableFields));\n                staticFields = { ...staticFields, ...extendableFields, displayName : bemName(fields) };\n\n                return cls !== Base?\n                    inherit.self(cls, fields, staticFields) :\n                    inherit(Base, fields, { ...staticFields, bases : entity.bases });\n            }\n\n            function applyEntityModDecls(cls, decls) {\n                const ptp = cls.prototype,\n                    extendableFields = buildExtendableFields(cls);\n\n                let i = entity.appliedModDeclsCount,\n                    decl;\n                while(decl = decls[i++]) {\n                    const { predicate, fields, staticFields } = decl,\n                        predicateFn = buildModPredicateFunction(predicate),\n                        autoModsFn = buildAutoModsFunction(predicate);\n\n                    autoModsFn &&\n                        inherit.self(cls, { mods : wrapFieldForMod(autoModsFn, predicateFn, ptp.mods) });\n\n                    for(let name in fields) {\n                        const field = fields[name];\n                        typeof field === 'function' &&\n                            (fields[name] = wrapFieldForMod(field, predicateFn, ptp[name]));\n                    }\n\n                    extendFields(staticFields, extendableFields);\n\n                    inherit.self(cls, fields, staticFields);\n                }\n\n                return Object.assign(cls, extendableFields);\n            }\n\n            !entityCls && entity.decls && (entityCls = entity.cls = entity.decls.reduce((cls, decl) => {\n                return Array.isArray(decl)?\n                    applyEntityModDecls(cls, decl) :\n                    applyEntityDecl(cls, decl);\n            }, Base));\n\n            if(entityCls && entity.modDecls) {\n                applyEntityModDecls(entityCls, entity.modDecls);\n                entity.appliedModDeclsCount = entity.modDecls.length;\n            }\n\n            if(entityCls && entity.declWrappers) {\n                entity.wrappedCls = entity.declWrappers.reduce(\n                    (prevCls, wrapper) => wrapper(prevCls),\n                    entityCls);\n                entity.declWrappers = null;\n            }\n\n            const resCls = entity.wrappedCls || entityCls;\n\n            if(resCls) resCls.default = resCls;\n\n            return resCls;\n        },\n        getEntity = key => entities[key] || (entities[key] = {\n            cls : null,\n            base : null,\n            decls : null,\n            modDecls : null,\n            appliedModDeclsCount : 0,\n            applyDecls : applyEntityDecls\n        });\n\n    return {\n        Bem : UserBem,\n\n        decl(base, fields, staticFields, wrapper) {\n            if(typeof base !== 'function' && !Array.isArray(base)) {\n                wrapper = staticFields;\n                staticFields = fields;\n                fields = base;\n                base = undefined;\n            }\n\n            if(typeof staticFields === 'function') {\n                wrapper = staticFields;\n                staticFields = undefined;\n            }\n\n            validateDecl(fields);\n            fixHooks(fields);\n            makePredicates(fields);\n\n\n            const key = bemName(fields),\n                entity = getEntity(key),\n                entityBases = entity.bases || (entity.bases = []),\n                entityDecls = entity.decls || (entity.decls = []),\n                declaredBases = entity.declaredBases || (entity.declaredBases = {});\n\n            collectMods(fields);\n\n            base && (Array.isArray(base) ? base : [base]).forEach(({ displayName }) => {\n                if(!declaredBases[displayName]) {\n                    const baseEntity = getEntity(displayName);\n                    entityBases.push(displayName);\n                    entityDecls.push(...baseEntity.decls);\n                    entityDecls.push(baseEntity.modDecls || (baseEntity.modDecls = []));\n                    declaredBases[displayName] = true;\n                }\n            });\n\n            entityDecls.push({ fields, staticFields });\n\n            wrapper && (entity.declWrappers || (entity.declWrappers = [])).push(wrapper);\n\n            return entity;\n        },\n\n        declMod(predicate, fields, staticFields) {\n            validateDecl(fields);\n\n            fixHooks(fields);\n            makePredicates(fields);\n\n            const entity = getEntity(bemName(fields));\n\n            (entity.modDecls || (entity.modDecls = [])).push({ predicate, fields, staticFields });\n\n            return entity;\n        }\n    };\n}\n","import { h, Component } from 'preact';\nimport PropTypes from 'proptypes';\n\nimport naming from '@bem/sdk.naming.presets';\nimport Core from '../Core';\n\nconst { Bem, decl, declMod } = Core({\n    preset : {\n        Render : h,\n        Base : Component,\n        classAttribute : 'class',\n        PropTypes\n    },\n    naming : naming[process.env.BEM_NAMING || 'react']\n});\n\nexport default Bem;\nexport { decl, declMod };\n\n"],"names":["module","name","val","elem","require","global","hasIntrospection","toString","indexOf","emptyBase","hasOwnProperty","Object","prototype","objCreate","create","ptp","inheritance","objKeys","keys","obj","res","i","call","push","extend","o1","o2","toStr","isArray","Array","isFunction","noOp","needCheckProps","testPropObj","specProps","getPropList","specProp","override","base","add","addList","j","len","length","prop","__self","baseMethod","__parent","result","baseSaved","__base","apply","arguments","applyMixins","mixins","mixin","inherit","self","args","withMixins","hasBase","props","staticProps","__constructor","constructor","basePtp","resPtp","defineAsGlobal","modules","define","provide","exports","this","uniqCount","noop","Bem","willInit","state","component","attrs","style","__render","addBemClassName","tag","block","mods","concat","mix","addMix","cls","content","optionalyReplaced","replace","optionalyWrapped","wrap","key","__uniqId","stringify","entity","delims","undefined","mod","join","assert","convention","delim","tokenize","parse","id","split","bemModes","preset","naming","Base","classAttribute","Render","PropTypes","getRenderProps","instance","mergedProps","__cnb","reduce","p","resolveMods","elemMods","runtimeNaming","entityClassName","stringifyClassName","__dangerouslySetNaming","resolvedMods","entities","bases","map","realModsEntities","__entities","modName","Entity","mixedEntities","resolveMixed","mixed","k","babelHelpers.extends","resolveMixes","mixes","type","inst","forEach","mixedMods","mixedBlock","mixedElem","contextBlock","context","bemBlock","Error","typeOfBlock","string","Core","options","UserBem","Component","validateDecl","decl","bemName","__displayName","bind","castModVal","modVal","lifecycleHooks","wrapWithFunction","n","makePredicates","collectMods","fields","collected","buildModPredicateFunction","predicate","modNames","every","modPredicate","buildAutoModsFunction","wrapFieldForMod","field","predicateFn","method","extendFields","from","to","fixHooks","oldName","buildExtendableFields","origin","applyEntityDecls","entityCls","applyEntityDecl","staticFields","extendableFields","c","displayName","applyEntityModDecls","decls","appliedModDeclsCount","autoModsFn","modDecls","declWrappers","wrappedCls","prevCls","wrapper","resCls","default","getEntity","entityBases","entityDecls","declaredBases","baseEntity","h","process","env","BEM_NAMING","declMod"],"mappings":"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"}